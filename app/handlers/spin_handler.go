package handlers

import (
	"database/sql"
	"fmt"
	"log"

	"github.com/denis1011101/super_cum_bot/app"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func HandleSpin(update tgbotapi.Update, bot *tgbotapi.BotAPI, db *sql.DB) {
	userID := update.Message.From.ID
	chatID := update.Message.Chat.ID

	// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –ø–µ–Ω–∏—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	pen, err := app.GetUserPen(db, userID, chatID)
	if err != nil {
		if err == sql.ErrNoRows {
			// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			registerBot(update, bot, db, true)
			return
		}
		log.Printf("Error querying pen size: %v", err)
		return
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
	shouldReturn := checkIsSpinNotLegal(pen.LastUpdateTime)
	if shouldReturn {
		app.SendMessage(chatID, "–ú–æ–≥—É —Ç–æ–ª—å–∫–æ –ø–æ –≥—É–±–∞–º –ø–æ–≤–æ–¥–∏—Ç—å. –ü—Ä–∏—Ö–æ–¥–∏ –ø–æ–∑–∂–µ...", bot, update.Message.MessageID)
		return
	}

	// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏–Ω–∞
	result := app.SpinPenSize(pen)

	// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–µ–Ω–∏—Å–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	newSize := pen.Size + result.Size
	app.UpdateUserPen(db, userID, chatID, newSize)

	//–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	var responseText string
	switch result.ResultType {
	case "ADD":
		switch result.Size {
		case 1:
			responseText = fmt.Sprintf("+1 –∏ –≤—Å–µ. –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º", newSize)
		case 2:
			responseText = fmt.Sprintf("+2 —ç—Ç–æ —É–∂–µ –ª—É—á—à–µ —á–µ–º +1 ü§° –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º", newSize)
		case 3:
			responseText = fmt.Sprintf("+3 –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ –∏–¥–µ—à—å?üçÜ –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º", newSize)
		case 4:
			responseText = fmt.Sprintf("+4 –≤–æ—É —á–µ–ª! –Ø —Å–º–æ—Ç—Ä—é —Ç—ã –ø–æ–¥—Ö–æ–¥–∏—à—å –∫ –¥–µ–ª—É —Å–µ—Ä—å–µ–∑–Ω–æ üòé –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º", newSize)
		case 5:
			responseText = fmt.Sprintf("–≠—Ç–æ RAMPAGEüî• +5 –ê–£–§ –≤–æ–ª—á–∞—Ä–∞ üê∫ –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º", newSize)
		}
	case "DIFF":
		switch result.Size {
		case -1:
			responseText = fmt.Sprintf("-1 —Ç—ã —á—ë –ø–∏–¥—Ä? –î–∞ —è —à—É—á—É. –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º", newSize)
		case -2:
			responseText = fmt.Sprintf("-2 –Ω–µ –≤–µ–ª–∏–∫–∞ –ø–æ—Ç–µ—Ä—è –±—Ä–æ ü•∏ –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º", newSize)
		case -3:
			responseText = fmt.Sprintf("-3 —ç—Ç–æ —Ö—É–∂–µ —á–µ–º +1 ü§° –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º", newSize)
		case -4:
			responseText = fmt.Sprintf("-4 –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π –¥–æ —Å–≤–∞–¥—å–±—ã –æ—Ç—Ä–∞—Å—Ç–µ—Ç ü§• –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º", newSize)
		case -5:
			responseText = fmt.Sprintf("–£ —Ç–µ–±—è -5 –ø–µ—Ç—É—à–∞—Ä–∞üêì –ò —è –Ω–µ —à—É—á—É. –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º", newSize)
		}
	case "RESET":
		responseText = "–¢–µ–ø–µ—Ä—å —Ç—ã –ø—Ä–æ—Å—Ç–æ –ø–µ–∑–¥–∞. –¢–≤–æ–π —Å–∞–π–∑: zero —Å–º"
	case "ZERO":
		responseText = "–ß–µ–µ–µ–µ–ª... —É —Ç–µ–±—è 0 —Å–º –ø—Ä–∏–±–∞–≤–∏–ª–æ—Å—å. –¢–≤–æ–π —Å–∞–π–∑: %d —Å–º"
	}

	app.SendMessage(chatID, responseText, bot, update.Message.MessageID)
}
